plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url = "https://ladysnake.jfrog.io/artifactory/mods"}
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://maven.wispforest.io/"}
    maven { url = uri("https://storage.googleapis.com/devan-maven/")}
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_components_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cardinal_components_version}"

    // REI
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
    modRuntime "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

    // DevLogin
    modRuntime "com.ptsmods:devlogin:1.2.1"

    // Stacc
    modRuntime(include("net.devtech:Stacc:1.3.0"))

    // OwO
    modImplementation "io.wispforest:owo-lib:${project.owo_version}"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
